name: Create Pull Request build

on:
  pull_request:

jobs:
  # JAVA AND GRADLE
  gradle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'
      - name: Where is Java
        run: which java
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew about installQuasar cleanFrontend assembleFrontend copyDist build --info
      - name: List files in libs
        run: ls -ahl build/libs

      # UPLOAD ARTIFACTS
      - uses: actions/upload-artifact@v2
        with:
          name: build-artifacts-gradle
          path: |
            build/libs/
            !build/libs/libraries/
            frontend/dist/spa
          if-no-files-found: warn # 'warn' or 'ignore' are also available, defaults to `warn`
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: report
          path: build/reports/tests/test/
          if-no-files-found: warn # 'warn' or 'ignore' are also available, defaults to `warn`

  # DOCKER RELATED
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          build-args: BRANCH_OR_TAG=${{ steps.branch-name.outputs.current_branch }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPO:${{ steps.branch-name.outputs.current_branch }}
            ghcr.io/${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPO:${{ steps.branch-name.outputs.current_branch }}-${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPO:${{ steps.branch-name.outputs.current_branch }}
            ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPO:${{ steps.branch-name.outputs.current_branch }}-${{ github.sha }}
